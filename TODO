The list of allowed signals might be in a separate list from the signals
that we have actions on. (See next paragraph below.)

If a signal is set to "pass noprint" or "ignore", we shouldn't check
this in the the dispatcher as this takes time. If we aren't using
signal handling at all, we shouldn't have that dispatcher slowing
things down. Should however quantify how much of a hit this is.  If it
is a hit a "set" command could be added to turn off debugger signal
handling. Also signal handling can interfere with other features like
remote debugging - check on this.

Add watchpoints. (Mentioned in pdbimprovements)

The main pydb.py file size has been reduced but it is still bit
large. If we can break out into more files that might be nice.

Some more regression tests should to be written. They've been
invaluable so far and maintain quality. Especially for the large
changes.

Redo post_mortem, pm, set_step to funnel through parse_options rather
than taking the optional cmdfile and opts paramaters.

gdb return command relies on the existance of a return statement in
the code.

Add online debugger concept help and in LaTeX? 

There seem to be weirdnesses in the debugger that I don't fully
comprehend and I think they exist in pdb.py as well.

Should check into getting this integrated with ipython's "run -d".  It
has a history mechanism and pydb should too. If it is possible to use
a class form ipython or a class that's out there, that should be done.

Use inspect module get_stack rather than bdb's?

$Id: TODO,v 1.11 2006/09/05 02:22:15 rockyb Exp $
