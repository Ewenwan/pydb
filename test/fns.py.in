#!@PYTHON@ -t
# $Id: fns.py.in,v 1.4 2007/02/13 11:42:54 rockyb Exp $ -*- Python -*-

# This unit test doesn't use any of the debugger code. It is meant solely
# to test the connection classes.

import os, sys, thread, time, unittest

top_builddir = "@top_builddir@"
if top_builddir[-1] != os.path.sep:
    top_builddir += os.path.sep
sys.path.insert(0, os.path.join(top_builddir, 'pydb'))
top_srcdir = "@top_srcdir@"
if top_srcdir[-1] != os.path.sep:
    top_srcdir += os.path.sep
sys.path.insert(0, os.path.join(top_srcdir, 'pydb'))

import fns

class TestFns(unittest.TestCase):

    def test_show_onoff(self):
       """Test of fns.show_onoff()"""
       self.assertEqual(fns.show_onoff(True), 'on')
       self.assertEqual(fns.show_onoff(False), 'off')

    def test_printf(self):
       """Test of fns.printf()"""
       self.assertEqual( fns.printf(31, "/o"), '037')
       self.assertEqual( fns.printf(31, "/t"), '00011111')
       self.assertEqual( fns.printf(33, "/c"), '!')
       self.assertEqual( fns.printf(33, "/x"), '0x21')

    def test_file_pyc2py(self):
       """Test file_pyc2py()"""
       self.assertEqual( "gcd.py", fns.file_pyc2py("gcd.pyo"),
                         "xx.pyo should transform to xx.py")
       self.assertEqual( "/tmp/gcd.py", fns.file_pyc2py("/tmp/gcd.pyc"),
                         "xx.pyc should transform to xx.py")
       self.assertEqual( "../gcd.py", fns.file_pyc2py("../gcd.py"),
                         "Test null transform")

    def test_whence_file(self):
       """Test whence_file()"""
       fname = os.path.join(os.curdir, "thisfilenotthere")
       self.assertEqual( fname, fns.whence_file(fname),
                         "whence should not change due to sep in name" )

       os.environ["PATH"] = ""
       fname = "gcd.py"
       self.assertEqual( fname, fns.whence_file(fname),
                         "Test of whence_file path expansion - not found " )
       test_dir = os.path.join(top_srcdir, "test")
       os.environ["PATH"] = test_dir
       fname = "gcd.py"
       expand_fname = os.path.join(test_dir, fname)
       self.assertEqual( expand_fname, fns.whence_file(fname),
                         "Test of whence_file path expansion - found" )

if __name__ == '__main__':
    unittest.main()
